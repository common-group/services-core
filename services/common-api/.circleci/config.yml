version: 2
jobs:
  build:
    docker:
      - image: comum/docker-build-env:latest
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.05.0-ce
      - run: apk update && apk add git bash
      - run: docker run -e POSTGRES_DB=services_core_test --name pg_default -p 5432:5432 -d postgres:9.6
      - run: git clone https://github.com/common-group/services-core-db.git migrations
      - run: docker build -f migrations/Dockerfile -t comum/services-core:test .
      - run: docker build -f Dockerfile -t comum/common-api:test .

      - run: docker run -i --rm --link pg_default:pg_default comum/services-core:test psql -U postgres -h pg_default -p 5432 services_core_test < migrations/init.sql
      - run: docker run -i --rm --link pg_default:pg_default comum/services-core:test psql -U postgres -h pg_default -p 5432 -c "alter user postgrest with superuser;"
      - run: docker run -i --rm --link pg_default:pg_default -e="DATABASE_URL=postgres://postgres@pg_default:5432/services_core_test" comum/services-core:test diesel migration --migration-dir migrations/migrations run
      - run: docker run -i --rm --link pg_default:localhost.pg -e="RAILS_ENV=test" -e="DATABASE_URL=postgres://postgres@localhost.pg:5432/services_core_test" comum/common-api:test bundle exec rspec spec

  deploy_production:
    docker:
      - image: comum/docker-build-env:latest
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.05.0-ce
      - run: apk update && apk add git nodejs nodejs-npm bash
      - run: npm install heroku
      - run: bash .circleci/setup-heroku.sh
      - run: sh .circleci/deploy-heroku.sh

  deploy_sandbox:
    docker:
      - image: comum/docker-build-env:latest
    steps:
      - checkout
      - add_ssh_keys
      - setup_remote_docker:
          version: 17.05.0-ce
      - run: apk update && apk add git
      - run: sh .circleci/deploy-sandbox.sh


workflows:
  version: 2
  build-and-push:
    jobs:
      - build
      - deploy_sandbox:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy_production:
          requires:
            - build
          filters:
            branches:
              only: master
